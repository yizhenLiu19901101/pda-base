<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.jiaxin.pad.controller.DictionaryControllerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2021-07-07T09:58:09" hostname="milos-computer.local" time="0.472">
  <properties/>
  <testcase name="insertDictionaryItem" classname="com.jiaxin.pad.controller.DictionaryControllerTest" time="0.472"/>
  <system-out><![CDATA[17:57:38.238 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@344eec8c testClass = DictionaryControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b50ab9 testClass = DictionaryControllerTest, locations = '{}', classes = '{class com.jiaxin.pda.PdaApplication, class com.jiaxin.pda.PdaApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4018c7f9, org.springframework.boot.test.context.SpringBootTestContextCustomizer@85e5223, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7c20d1fa, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@144ba21f], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
17:57:38.369 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
17:57:38.370 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
17:57:38.371 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
17:57:38.372 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
17:57:38.373 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [Inlined Test Properties] PropertySource with highest search precedence

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.4.3.RELEASE)

2021-07-07 17:57:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.DictionaryControllerTest?[0;39m | Starting DictionaryControllerTest on milos-computer.local with PID 97454 (/Users/mac/gitHubRepository/pda-base/build/classes/java/test started by mac in /Users/mac/gitHubRepository/pda-base)
2021-07-07 17:57:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.DictionaryControllerTest?[0;39m | The following profiles are active: dev
2021-07-07 17:57:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.context.support.GenericWebApplicationContext?[0;39m | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3467b1f3: startup date [Wed Jul 07 17:57:59 CST 2021]; root of context hierarchy
2021-07-07 17:58:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.data.repository.config.RepositoryConfigurationDelegate?[0;39m | Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-07 17:58:01 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.annotation.ConfigurationClassPostProcessor?[0;39m | Cannot enhance @Configuration bean definition 'swaggerProperties' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-07-07 17:58:01 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.annotation.ConfigurationClassPostProcessor?[0;39m | Cannot enhance @Configuration bean definition 'propertySourcesPlaceholderConfigurer' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-07-07 17:58:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker?[0;39m | Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f1bb78e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-07 17:58:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure?[0;39m | Init DruidDataSource
2021-07-07 17:58:02 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.alibaba.druid.pool.DruidDataSource?[0;39m | {dataSource-1} inited
 _ _   |_  _ _|_. ___ _ |    _ 
| | |\/|_)(_| | |_\  |_)||_|_\ 
     /               |         
                        3.2.0 
----------------------
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/updateDictionary],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.updateDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/updateDictionaryType],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.updateDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/insertDictionary],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.insertDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/insertDictionaryType],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.insertDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/deleteDictionaryType],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.deleteDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryTypeByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryTypeByPage(com.jiaxin.pda.entity.dto.DictionaryTypeDto)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByPage(com.jiaxin.pda.entity.dto.DictionaryDto)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryByTypeId/{typeId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByPage(java.lang.Integer)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryByToken],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByToken(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/deleteDictionaryItem],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.deleteDictionary(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/file/uploadImage],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FileController.uploadImage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile,java.lang.String)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/insertFinanceDetail],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.insertFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/updateFinanceDetail],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.updateFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/deleteFinanceDetail],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.deleteFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/queryFinanceDetailByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.FinanceDetailController.queryFinanceDetailByPage(com.jiaxin.pda.entity.dto.FinanceDetailDto)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/getDetailDate],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.queryDetailDate(com.jiaxin.pda.entity.dto.FinanceDetailDto,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/insertMenu],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.insertMenu(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/delete],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.deleteMenu(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/updateMenuName],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.updateMenuName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/queryMenuListByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.MenuController.queryMenuListByPage(com.jiaxin.pda.entity.dto.MenuDto)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/insertRole],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo,org.springframework.validation.BindingResult)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/updateRoleName],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.updateRoleName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo,org.springframework.validation.BindingResult)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/deleteRole],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.deleteRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/selectRoleByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.RoleController.selectRoleByPage(com.jiaxin.pda.entity.dto.RoleDto)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/givePrivilege],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.givePrivilege(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RolePrivilegeVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/cancelPrivilege],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.cancelPrivilege(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RolePrivilegeVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/queryPrivilegeByRoleId/{roleId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.queryPrivilegeByRoleId(java.lang.Integer)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/logout],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.logout(java.lang.String)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/login],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.login(com.jiaxin.pda.entity.vo.UserVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/findById/{id}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.findById(java.lang.String)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/findByToken],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.findByToken(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/registerUser],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/updateUserInfo],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.updateUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo,org.springframework.validation.BindingResult)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/updateUserPassword],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.updateUserPassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/deleteUser],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/queryUserListByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.UserController.queryUserListByPage(com.jiaxin.pda.entity.dto.UserDto)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/insertUserRole],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserPrivilegeVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/deleteUserRole],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.deleteUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserPrivilegeVo)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/queryRoleByUserId/{userId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.queryRoleByUserId(int)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/queryUserPrivileges/{parentMenuId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.queryUserPrivileges(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-07-07 17:58:03 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-07-07 17:58:05 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOGLOCK
2021-07-07 17:58:05 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOGLOCK
2021-07-07 17:58:05 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT `LOCKED` FROM pda.DATABASECHANGELOGLOCK WHERE ID=1
2021-07-07 17:58:05 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.lockservice.StandardLockService?[0;39m | Successfully acquired change log lock
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT MD5SUM FROM pda.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL LIMIT 1
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOG
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.changelog.StandardChangeLogHistoryService?[0;39m | Reading from pda.DATABASECHANGELOG
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT * FROM pda.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.lockservice.StandardLockService?[0;39m | Successfully released change log lock
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/liquibase || /liquibase.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2021-07-07 17:58:07 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter?[0;39m | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3467b1f3: startup date [Wed Jul 07 17:57:59 CST 2021]; root of context hierarchy
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.ui.freemarker.SpringTemplateLoader?[0;39m | SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@3467b1f3: startup date [Wed Jul 07 17:57:59 CST 2021]; root of context hierarchy] and template loader path [classpath:/templates/]
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer?[0;39m | ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-07-07 17:58:08 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration?[0;39m | Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.DefaultLifecycleProcessor?[0;39m | Starting beans in phase 2147483647
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper?[0;39m | Context refreshed
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper?[0;39m | Found 1 custom documentation plugin(s)
2021-07-07 17:58:08 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.scanners.ApiListingReferenceScanner?[0;39m | Scanning for api listing references
2021-07-07 17:58:08 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:08 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator?[0;39m | Generating unique operation named: insertDictionaryTypeUsingPUT_1
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator?[0;39m | Generating unique operation named: updateDictionaryTypeUsingPUT_1
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.DictionaryControllerTest?[0;39m | Started DictionaryControllerTest in 31.141 seconds (JVM running for 32.876)
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.mock.web.SpringBootMockServletContext?[0;39m | Initializing Spring FrameworkServlet ''
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization started
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization completed in 14 ms
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.DictionaryControllerTest?[0;39m | 插入字典信息
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.DictionaryControllerTest?[0;39m | 插入字典信息条件: {"itemName":"饮料","orderNo":4,"dictionaryTypeId":3}
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.controller.DictionaryController?[0;39m | 插入字典项，参数信息为：DictionaryVo(id=null, uuid=0, itemName=饮料, dictionaryTypeId=3, orderNo=4)
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByName?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.item_name = ? 
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByName?[0;39m | ==> Parameters: 饮料(String)
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByName?[0;39m | <==      Total: 0
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.selectMaxUuid?[0;39m | ==>  Preparing: SELECT IFNULL( max( td.uuid), 0 ) FROM tb_dictionary td WHERE td.delete_flag = 0 
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.selectMaxUuid?[0;39m | ==> Parameters: 
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.selectMaxUuid?[0;39m | <==      Total: 1
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.util.ParamInterceptor?[0;39m | d5c58de8bfe546fabba7f89110a56eda
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.util.ParamInterceptor?[0;39m | d5c58de8bfe546fabba7f89110a56eda
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.util.ParamInterceptor?[0;39m | 饮料
2021-07-07 17:58:09 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.util.ParamInterceptor?[0;39m | \u996E\u6599
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.insert?[0;39m | ==>  Preparing: INSERT INTO tb_dictionary ( id, reversion, delete_flag, updated_time, item_name, updated_by, order_no, created_by, dictionary_type_id, created_time, uuid ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-07-07 17:58:09 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.insert?[0;39m | ==> Parameters: d5c58de8bfe546fabba7f89110a56eda(String), 1(Integer), 0(Integer), 2021-07-07 17:58:09.853(Timestamp), 饮料(String), -1(Integer), 4(Integer), -1(Integer), 3(Integer), 2021-07-07 17:58:09.853(Timestamp), 8(Integer)
2021-07-07 17:58:10 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.insert?[0;39m | <==    Updates: 1

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /dictionary/insertDictionary
       Parameters = {}
          Headers = {token=[-1], Accept=[application/json], Content-Type=[application/json;charset=utf-8]}

Handler:
             Type = com.jiaxin.pda.controller.DictionaryController
           Method = public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.insertDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"code":200,"msg":"操作成功","body":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
