<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.jiaxin.pad.controller.MenuControllerTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2019-10-12T03:42:01" hostname="milos-computer.local" time="0.356">
  <properties/>
  <testcase name="thirdCase" classname="com.jiaxin.pad.controller.MenuControllerTest" time="0.112"/>
  <testcase name="firstCase" classname="com.jiaxin.pad.controller.MenuControllerTest" time="0.098"/>
  <testcase name="secondCase" classname="com.jiaxin.pad.controller.MenuControllerTest" time="0.07"/>
  <testcase name="fourCase" classname="com.jiaxin.pad.controller.MenuControllerTest" time="0.074"/>
  <system-out><![CDATA[2019-10-12 11:42:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.context.SpringBootTestContextBootstrapper?[0;39m | Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.jiaxin.pad.controller.MenuControllerTest], using SpringBootContextLoader
2019-10-12 11:42:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.context.support.AbstractContextLoader?[0;39m | Could not detect default resource locations for test class [com.jiaxin.pad.controller.MenuControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.context.SpringBootTestContextBootstrapper?[0;39m | Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.context.SpringBootTestContextBootstrapper?[0;39m | Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@46c73dc1, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5136e474, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@176d13f2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2f4ccd0f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@509ad412, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@36699f31, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4964e88d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@9601b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6350e4c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7cdf99ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1211263a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@59d395db]
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.mock.web.SpringBootMockServletContext?[0;39m | Initializing Spring FrameworkServlet ''
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization started
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization completed in 6 ms
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.MenuControllerTest?[0;39m | 删除菜单
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.findMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_level AS menuLevel, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.id = ? 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.findMenuById?[0;39m | ==> Parameters: ccecd5d6b0294c7d97a6aa6654dd0390(String)
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.findMenuById?[0;39m | <==      Total: 1
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.deleteMenu?[0;39m | ==>  Preparing: UPDATE tb_menu SET updated_by = ?, updated_time = ?, delete_flag = ?, reversion = reversion + 1 WHERE id = ? AND reversion = ? 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.deleteMenu?[0;39m | ==> Parameters: -1(Integer), 2019-10-12 11:41:57.051(Timestamp), true(Boolean), ccecd5d6b0294c7d97a6aa6654dd0390(String), 13(Integer)
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.deleteMenu?[0;39m | <==    Updates: 1

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /menu/delete/ccecd5d6b0294c7d97a6aa6654dd0390
       Parameters = {}
          Headers = {Accept=[application/json], Content-Type=[application/json]}

Handler:
             Type = com.jiaxin.pda.controller.MenuController
           Method = public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.deleteMenu(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"code":200,"msg":"操作成功","body":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.mock.web.SpringBootMockServletContext?[0;39m | Initializing Spring FrameworkServlet ''
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization started
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization completed in 3 ms
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.MenuControllerTest?[0;39m | 插入菜单信息
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.MenuControllerTest?[0;39m | 插入菜单信息条件: {"parentMenuId":0,"menuLevel":1,"menuName":"用户"}
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMaxMenuId?[0;39m | ==>  Preparing: SELECT IFNULL( max( tm.menu_id), 0 ) FROM tb_menu tm WHERE tm.delete_flag = 0 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMaxMenuId?[0;39m | ==> Parameters: 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMaxMenuId?[0;39m | <==      Total: 1
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.insertMenu?[0;39m | ==>  Preparing: INSERT INTO tb_menu ( id, menu_id, menu_name, parent_menu_id, menu_level, reversion, delete_flag, created_by, created_time, updated_by, updated_time ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.insertMenu?[0;39m | ==> Parameters: 37a216251ea1484ba4fe80cfb038ca03(String), 7(Integer), 用户(String), 0(Integer), 1(Integer), 1(Integer), false(Boolean), -1(Integer), 2019-10-12 11:41:57.051(Timestamp), -1(Integer), 2019-10-12 11:41:57.051(Timestamp)
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.insertMenu?[0;39m | <==    Updates: 1

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /menu/insertMenu
       Parameters = {}
          Headers = {Accept=[application/json], Content-Type=[application/json;charset=utf-8]}

Handler:
             Type = com.jiaxin.pda.controller.MenuController
           Method = public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.insertMenu(com.jiaxin.pda.entity.vo.MenuVo)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"code":200,"msg":"操作成功","body":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.mock.web.SpringBootMockServletContext?[0;39m | Initializing Spring FrameworkServlet ''
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization started
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization completed in 2 ms
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.MenuControllerTest?[0;39m | 修改菜单名称
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.MenuControllerTest?[0;39m | 修改菜单名称条件: {"reversion":1,"menuName":"小看板","id":"ccecd5d6b0294c7d97a6aa6654dd0390"}
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.updateMenuName?[0;39m | ==>  Preparing: UPDATE tb_menu SET updated_by = ?, updated_time = ?, menu_name = ?, reversion = reversion + 1 WHERE id = ? AND reversion = ? 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.updateMenuName?[0;39m | ==> Parameters: -1(Integer), 2019-10-12 11:41:57.051(Timestamp), 小看板(String), ccecd5d6b0294c7d97a6aa6654dd0390(String), 1(Integer)
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.updateMenuName?[0;39m | <==    Updates: 0

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /menu/updateMenuName
       Parameters = {}
          Headers = {Accept=[application/json], Content-Type=[application/json;charset=utf-8]}

Handler:
             Type = com.jiaxin.pda.controller.MenuController
           Method = public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.updateMenuName(com.jiaxin.pda.entity.vo.MenuVo)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"code":200,"msg":"操作成功","body":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.mock.web.SpringBootMockServletContext?[0;39m | Initializing Spring FrameworkServlet ''
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization started
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization completed in 2 ms
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.MenuControllerTest?[0;39m | 分页查询菜单对象
2019-10-12 11:42:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.MenuControllerTest?[0;39m | 分页查询菜对象 条件: {"current":1,"offset":10}
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByPage?[0;39m | ==>  Preparing: select count(0) from (SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_level AS menuLevel, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0) as total 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByPage?[0;39m | ==> Parameters: 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByPage?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_level AS menuLevel, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 limit 0,10 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByPage?[0;39m | ==> Parameters: 
2019-10-12 11:42:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByPage?[0;39m | <==      Total: 7

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /menu/queryMenuListByPage
       Parameters = {}
          Headers = {Accept=[application/json], Content-Type=[application/json;charset=utf-8]}

Handler:
             Type = com.jiaxin.pda.controller.MenuController
           Method = public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.MenuController.queryMenuListByPage(com.jiaxin.pda.entity.dto.MenuDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"code":200,"msg":"操作成功","body":{"rows":[{"createdTime":1569309899000,"createdBy":-1,"updatedTime":1569309899000,"updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"0ddccac437fe4165abbba417cfdb8823","menuId":4,"menuName":"用户","parentMenuId":0,"menuLevel":1},{"createdTime":1570783272000,"createdBy":-1,"updatedTime":1570783272000,"updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"3641ce15bb9745c584d3551190f947e6","menuId":5,"menuName":"用户","parentMenuId":0,"menuLevel":1},{"createdTime":1570851717000,"createdBy":-1,"updatedTime":1570851717000,"updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"37a216251ea1484ba4fe80cfb038ca03","menuId":7,"menuName":"用户","parentMenuId":0,"menuLevel":1},{"createdTime":1567763727000,"createdBy":-1,"updatedTime":1567763727000,"updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"652109ac26aa46c78da0b0b505b5fd26","menuId":3,"menuName":"角色","parentMenuId":0,"menuLevel":1},{"createdTime":1567763654000,"createdBy":-1,"updatedTime":1567763654000,"updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"72a53a3c66324d1ab83e2ea329e2a989","menuId":2,"menuName":"菜单","parentMenuId":0,"menuLevel":1},{"createdTime":1570783698000,"createdBy":-1,"updatedTime":1570783698000,"updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"9b934b0cbf08427893aab7689fb55fa7","menuId":6,"menuName":"用户","parentMenuId":0,"menuLevel":1},{"createdTime":1567762921000,"createdBy":-1,"updatedTime":1567762921000,"updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"bb6d90c3778b46e6b67f8748966a15b0","menuId":1,"menuName":"大看板","parentMenuId":0,"menuLevel":1}],"page":{"offset":10,"current":1,"pages":1,"rows":7}}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
