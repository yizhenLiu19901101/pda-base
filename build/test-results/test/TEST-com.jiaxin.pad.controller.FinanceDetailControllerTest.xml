<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.jiaxin.pad.controller.FinanceDetailControllerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-01-13T08:49:00" hostname="milos-computer.local" time="1.791">
  <properties/>
  <testcase name="queryByToken" classname="com.jiaxin.pad.controller.FinanceDetailControllerTest" time="1.791"/>
  <system-out><![CDATA[16:48:29.021 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4ed0e52f testClass = FinanceDetailControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5cdac8c testClass = FinanceDetailControllerTest, locations = '{}', classes = '{class com.jiaxin.pda.PdaApplication, class com.jiaxin.pda.PdaApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@126fdbc3, org.springframework.boot.test.context.SpringBootTestContextCustomizer@5241c0fe, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@d213dc0, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@2f9daa4a], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
16:48:29.088 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
16:48:29.089 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
16:48:29.089 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
16:48:29.090 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
16:48:29.091 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [Inlined Test Properties] PropertySource with highest search precedence

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.4.3.RELEASE)

2020-01-13 16:48:49 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.FinanceDetailControllerTest?[0;39m | Starting FinanceDetailControllerTest on milos-computer.local with PID 40148 (/Users/mac/gitHubRepository/pda/build/classes/java/test started by mac in /Users/mac/gitHubRepository/pda)
2020-01-13 16:48:49 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.FinanceDetailControllerTest?[0;39m | The following profiles are active: dev
2020-01-13 16:48:50 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.context.support.GenericWebApplicationContext?[0;39m | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@494c5ac: startup date [Mon Jan 13 16:48:50 CST 2020]; root of context hierarchy
2020-01-13 16:48:51 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.data.repository.config.RepositoryConfigurationDelegate?[0;39m | Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-13 16:48:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker?[0;39m | Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1c0b235] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-01-13 16:48:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure?[0;39m | Init DruidDataSource
2020-01-13 16:48:53 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.alibaba.druid.pool.DruidDataSource?[0;39m | {dataSource-1} inited
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/insertDictionary],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.insertDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/insertDictionaryType],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.insertDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/updateDictionary],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.updateDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/updateDictionaryType],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.updateDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/deleteDictionaryType],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.deleteDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/queryDictionaryTypeByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryTypeByPage(com.jiaxin.pda.entity.dto.DictionaryTypeDto)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/queryDictionaryByTypeId/{typeId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByPage(java.lang.Integer)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/queryDictionaryByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByPage(com.jiaxin.pda.entity.dto.DictionaryDto)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/queryDictionaryByToken],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByToken(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/dictionary/deleteDictionaryItem],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.deleteDictionary(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/file/uploadImage],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FileController.uploadImage(org.springframework.web.multipart.MultipartFile,java.lang.String)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/finance/insertFinanceDetail],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.insertFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/finance/updateFinanceDetail],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.updateFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/finance/deleteFinanceDetail],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.deleteFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/finance/queryFinanceDetailByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.FinanceDetailController.queryFinanceDetailByPage(com.jiaxin.pda.entity.dto.FinanceDetailDto)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/finance/getDetailDate/{queryType}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.findByToken(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/menu/insertMenu],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.insertMenu(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/menu/delete],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.deleteMenu(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/menu/updateMenuName],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.updateMenuName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/menu/queryMenuListByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.MenuController.queryMenuListByPage(com.jiaxin.pda.entity.dto.MenuDto)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/role/insertRole],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo,org.springframework.validation.BindingResult)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/role/updateRoleName],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.updateRoleName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo,org.springframework.validation.BindingResult)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/role/deleteRole],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.deleteRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/role/selectRoleByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.RoleController.selectRoleByPage(com.jiaxin.pda.entity.dto.RoleDto)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/role/givePrivilege],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.givePrivilege(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RolePrivilegeVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/role/cancelPrivilege],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.cancelPrivilege(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RolePrivilegeVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/role/queryPrivilegeByRoleId/{roleId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.queryPrivilegeByRoleId(java.lang.Integer)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/logout],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.logout(java.lang.String)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/login],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.login(com.jiaxin.pda.entity.vo.UserVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/findByToken],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.findByToken(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/findById/{id}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.findById(java.lang.String)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/registerUser],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/updateUserName],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.updateUserName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo,org.springframework.validation.BindingResult)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/updateUserPassword],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.updateUserPassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/deleteUser],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/queryUserListByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.UserController.queryUserListByPage(com.jiaxin.pda.entity.dto.UserDto)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/insertUserRole],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserPrivilegeVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/deleteUserRole],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.deleteUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserPrivilegeVo)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/queryRoleByUserId/{userId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.queryRoleByUserId(int)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/api/user/queryUserPrivileges/{parentMenuId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.queryUserPrivileges(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-13 16:48:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-13 16:48:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOGLOCK
2020-01-13 16:48:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOGLOCK
2020-01-13 16:48:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT `LOCKED` FROM pda.DATABASECHANGELOGLOCK WHERE ID=1
2020-01-13 16:48:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.lockservice.StandardLockService?[0;39m | Successfully acquired change log lock
2020-01-13 16:48:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT MD5SUM FROM pda.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL LIMIT 1
2020-01-13 16:48:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOG
2020-01-13 16:48:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.changelog.StandardChangeLogHistoryService?[0;39m | Reading from pda.DATABASECHANGELOG
2020-01-13 16:48:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT * FROM pda.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.lockservice.StandardLockService?[0;39m | Successfully released change log lock
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/liquibase || /liquibase.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter?[0;39m | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@494c5ac: startup date [Mon Jan 13 16:48:50 CST 2020]; root of context hierarchy
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-13 16:48:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.ui.freemarker.SpringTemplateLoader?[0;39m | SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@494c5ac: startup date [Mon Jan 13 16:48:50 CST 2020]; root of context hierarchy] and template loader path [classpath:/templates/]
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer?[0;39m | ClassTemplateLoader for Spring macros added to FreeMarker configuration
2020-01-13 16:48:59 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration?[0;39m | Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.DefaultLifecycleProcessor?[0;39m | Starting beans in phase 2147483647
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper?[0;39m | Context refreshed
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper?[0;39m | Found 1 custom documentation plugin(s)
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.scanners.ApiListingReferenceScanner?[0;39m | Scanning for api listing references
2020-01-13 16:48:59 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:48:59 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:48:59 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:48:59 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:48:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator?[0;39m | Generating unique operation named: insertDictionaryTypeUsingPUT_1
2020-01-13 16:48:59 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator?[0;39m | Generating unique operation named: updateDictionaryTypeUsingPUT_1
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-01-13 16:49:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.FinanceDetailControllerTest?[0;39m | Started FinanceDetailControllerTest in 31.155 seconds (JVM running for 32.614)
2020-01-13 16:49:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.mock.web.SpringBootMockServletContext?[0;39m | Initializing Spring FrameworkServlet ''
2020-01-13 16:49:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization started
2020-01-13 16:49:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization completed in 14 ms
2020-01-13 16:49:00 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.DictionaryControllerTest?[0;39m | 查询财务信息
2020-01-13 16:49:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.service.impl.UserServiceImpl?[0;39m | 从mysql中获得数据
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserMapper.findUserById?[0;39m | ==>  Preparing: SELECT tu.id, tu.user_id AS userId, tu.`password`, tu.reversion, tu.user_name AS userName, tu.delete_flag as deleteFlag, tu.created_by AS createdBy, tu.user_desc AS userDesc, tu.image_url AS imageUrl, tu.user_level AS userLevel, tu.created_time AS createdTime, tu.updated_by AS updatedBy, tu.updated_time AS updatedTime FROM tb_user tu WHERE tu.id = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserMapper.findUserById?[0;39m | ==> Parameters: 25b957908a1d4612807e0a8f6f0e88e5(String)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserMapper.findUserById?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.component.RequestIntercept?[0;39m | http://localhost/api/finance/getDetailDate/1没有被拦截......
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.FinanceDetailMapper.queryFinanceDetailByUserId?[0;39m | ==>  Preparing: SELECT tfd.id, tfd.uuid, tfd.item_id AS itemId, tfd.cost_money AS costMoney, tfd.note, tfd.created_by AS createdBy, tfd.created_time AS createdTime, tfd.updated_by AS updatedBy, tfd.updated_time AS updatedTime, tfd.reversion, tfd.delete_flag as deleteFlag FROM tb_finance_detail tfd where tfd.delete_flag = 0 and tfd.updated_by = ? order by tfd.updated_time desc 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.FinanceDetailMapper.queryFinanceDetailByUserId?[0;39m | ==> Parameters: 3(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.FinanceDetailMapper.queryFinanceDetailByUserId?[0;39m | <==      Total: 10
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 8(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 2(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 1(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 5(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 2(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 5(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 8(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 2(Integer)
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:01 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 3(Integer)
2020-01-13 16:49:02 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:02 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==>  Preparing: SELECT td.id, td.uuid, td.reversion, td.created_by AS createdBy, td.created_time AS createdTime, td.updated_by AS updatedBy, td.updated_time AS updatedTime, td.item_name AS itemName, td.order_no as orderNo, td.delete_flag as deleteFlag FROM tb_dictionary td WHERE td.delete_flag = 0 and td.uuid = ? 
2020-01-13 16:49:02 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | ==> Parameters: 4(Integer)
2020-01-13 16:49:02 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.DictionaryMapper.queryDictionaryItemInfoByUuid?[0;39m | <==      Total: 1
2020-01-13 16:49:02 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.component.RequestIntercept?[0;39m | postHandle...
2020-01-13 16:49:02 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.component.RequestIntercept?[0;39m | afterCompletion...

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/finance/getDetailDate/1
       Parameters = {}
          Headers = {token=[eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Nzk1MDc1NzQ0MjIsInBheWxvYWQiOiJcIjI1Yjk1NzkwOGExZDQ2MTI4MDdlMGE4ZjZmMGU4OGU1XCIifQ.GFCupog4i4pTBTFA8spukxUiXRniCUdFM6hPgdNuRhc], Accept=[application/json], Content-Type=[application/json]}

Handler:
             Type = com.jiaxin.pda.controller.FinanceDetailController
           Method = public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.findByToken(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[text/json;charset=utf-8]}
     Content type = text/json
             Body = {"code":200,"msg":"操作成功","body":[{"reversion":1,"note":"阿萨姆奶茶","itemName":"饮料","color":"red","tag":"2020-01-13 15:14:10","id":"5a6afbae4d074502bfdc0206c190169a","type":"circle","content":5.0},{"reversion":1,"note":"黄焖鸡米饭","itemName":"小吃","color":"red","tag":"2020-01-13 15:13:32","id":"12f2e9fc09f24bc084a540496d12d5aa","type":"circle","content":13.46},{"reversion":1,"note":"体验金","itemName":"支付宝体验金","color":"green","tag":"2020-01-09 22:36:00","id":"3f4d3bb955794770a38d2271b5f087e7","type":"star","content":0.22},{"reversion":1,"note":"停车","itemName":"停车费","color":"red","tag":"2020-01-09 18:46:00","id":"2e89dd0f355a42fca840c543a0e820f7","type":"circle","content":36.0},{"reversion":1,"note":"黄焖鸡米饭","itemName":"小吃","color":"red","tag":"2020-01-09 18:30:22","id":"20eb66475c5649b2abd65e6399474255","type":"circle","content":13.5},{"reversion":1,"note":"上班停车","itemName":"停车费","color":"red","tag":"2020-01-07 19:19:00","id":"17b62c9646a442c197c801cd0f276176","type":"circle","content":33.0},{"reversion":1,"note":"阿萨姆奶茶","itemName":"饮料","color":"red","tag":"2020-01-06 09:39:32","id":"719f18b0446d403e8ba1e7e7194d10d6","type":"circle","content":5.0},{"reversion":1,"note":"炒面","itemName":"小吃","color":"red","tag":"2019-09-30 10:17:56","id":"020a8e40ae074ac188aedfac2981fa8e","type":"circle","content":10.0},{"reversion":2,"note":"坐800路","itemName":"公交车","color":"red","tag":"2019-09-29 15:00:14","id":"085a10b9c3974c85a6dc92ca7fc11d12","type":"circle","content":1.0},{"reversion":1,"note":"从咸宁路到延平门","itemName":"地铁","color":"red","tag":"2019-09-29 14:53:33","id":"085a10b9c3974c85a6dc92ca7fc11d11","type":"circle","content":3.6}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
