<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.jiaxin.pad.controller.UserControllerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-05-13T03:21:58" hostname="milos-computer.local" time="1.487">
  <properties/>
  <testcase name="queryMenuListByUserToken" classname="com.jiaxin.pad.controller.UserControllerTest" time="1.487"/>
  <system-out><![CDATA[11:21:15.601 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@33e1c70 testClass = UserControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@684ba02c testClass = UserControllerTest, locations = '{}', classes = '{class com.jiaxin.pda.PdaApplication, class com.jiaxin.pda.PdaApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7b6c773e, org.springframework.boot.test.context.SpringBootTestContextCustomizer@4e2deb8e, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@77b1400b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.test.context.web.socket.MockServerContainerContextCustomizer@6a0e14ee], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
11:21:15.687 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
11:21:15.688 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
11:21:15.689 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
11:21:15.690 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
11:21:15.690 [Test worker] DEBUG org.springframework.core.env.StandardEnvironment - Adding [Inlined Test Properties] PropertySource with highest search precedence
2020-05-13 11:21:31 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.annotation.AnnotationConfigApplicationContext?[0;39m | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4e0e0cb6: startup date [Wed May 13 11:21:31 CST 2020]; root of context hierarchy
2020-05-13 11:21:32 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor?[0;39m | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-05-13 11:21:32 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker?[0;39m | Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$290cee1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.4.3.RELEASE)

2020-05-13 11:21:47 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.UserControllerTest?[0;39m | The following profiles are active: dev
2020-05-13 11:21:47 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.context.support.GenericWebApplicationContext?[0;39m | Refreshing org.springframework.web.context.support.GenericWebApplicationContext@72a532a5: startup date [Wed May 13 11:21:47 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4e0e0cb6
2020-05-13 11:21:49 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.data.repository.config.RepositoryConfigurationDelegate?[0;39m | Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-13 11:21:49 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.cloud.context.scope.GenericScope?[0;39m | BeanFactory id=1119f1d9-8ddc-355b-89ab-1cde6da57e4c
2020-05-13 11:21:50 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor?[0;39m | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-05-13 11:21:50 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker?[0;39m | Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cf2eb1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-13 11:21:50 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker?[0;39m | Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [class org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3f1f9160] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-13 11:21:50 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker?[0;39m | Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$290cee1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-13 11:21:50 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure?[0;39m | Init DruidDataSource
2020-05-13 11:21:50 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.alibaba.druid.pool.DruidDataSource?[0;39m | {dataSource-1} inited
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/insertDictionary],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.insertDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/insertDictionaryType],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.insertDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/updateDictionary],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.updateDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/updateDictionaryType],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.updateDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/deleteDictionaryType],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.deleteDictionaryType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryTypeVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryTypeByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryTypeByPage(com.jiaxin.pda.entity.dto.DictionaryTypeDto)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/deleteDictionaryItem],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.deleteDictionary(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.DictionaryVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryByTypeId/{typeId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByPage(java.lang.Integer)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByPage(com.jiaxin.pda.entity.dto.DictionaryDto)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/dictionary/queryDictionaryByToken],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.DictionaryController.queryDictionaryByToken(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/file/uploadImage],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FileController.uploadImage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile,java.lang.String)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/insertFinanceDetail],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.insertFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/updateFinanceDetail],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.updateFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/deleteFinanceDetail],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.deleteFinanceDetail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.FinanceDetailVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/queryFinanceDetailByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.FinanceDetailController.queryFinanceDetailByPage(com.jiaxin.pda.entity.dto.FinanceDetailDto)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/finance/getDetailDate],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.FinanceDetailController.queryDetailDate(com.jiaxin.pda.entity.dto.FinanceDetailDto,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/insertMenu],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.insertMenu(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/delete],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.deleteMenu(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/updateMenuName],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.MenuController.updateMenuName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.MenuVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/menu/queryMenuListByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.MenuController.queryMenuListByPage(com.jiaxin.pda.entity.dto.MenuDto)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/insertRole],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo,org.springframework.validation.BindingResult)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/updateRoleName],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.updateRoleName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo,org.springframework.validation.BindingResult)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/deleteRole],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.deleteRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RoleVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/selectRoleByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.RoleController.selectRoleByPage(com.jiaxin.pda.entity.dto.RoleDto)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/givePrivilege],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.givePrivilege(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RolePrivilegeVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/cancelPrivilege],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.cancelPrivilege(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.RolePrivilegeVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/role/queryPrivilegeByRoleId/{roleId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.RoleController.queryPrivilegeByRoleId(java.lang.Integer)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/registerUser],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/deleteUser],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/updateUserInfo],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.updateUserInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo,org.springframework.validation.BindingResult)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/updateUserPassword],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.updateUserPassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/queryRoleByUserId/{userId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.queryRoleByUserId(int)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/login],methods=[POST]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.login(com.jiaxin.pda.entity.vo.UserVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/logout],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.logout(java.lang.String)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/findById/{id}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.findById(java.lang.String)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/findByToken],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.findByToken(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/queryUserListByPage],methods=[POST]}" onto public com.jiaxin.pda.entity.ListPageVo com.jiaxin.pda.controller.UserController.queryUserListByPage(com.jiaxin.pda.entity.dto.UserDto)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/insertUserRole],methods=[PUT]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserPrivilegeVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/deleteUserRole],methods=[DELETE]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.deleteUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.jiaxin.pda.entity.vo.UserPrivilegeVo)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/user/queryUserPrivileges/{parentMenuId}],methods=[GET]}" onto public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.queryUserPrivileges(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-05-13 11:21:52 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping?[0;39m | Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-05-13 11:21:54 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOGLOCK
2020-05-13 11:21:54 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOGLOCK
2020-05-13 11:21:54 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT `LOCKED` FROM pda.DATABASECHANGELOGLOCK WHERE ID=1
2020-05-13 11:21:54 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.lockservice.StandardLockService?[0;39m | Successfully acquired change log lock
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT MD5SUM FROM pda.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL LIMIT 1
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT COUNT(*) FROM pda.DATABASECHANGELOG
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.changelog.StandardChangeLogHistoryService?[0;39m | Reading from pda.DATABASECHANGELOG
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.executor.jvm.JdbcExecutor?[0;39m | SELECT * FROM pda.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mliquibase.lockservice.StandardLockService?[0;39m | Successfully released change log lock
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/liquibase || /liquibase.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/features || /features.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2020-05-13 11:21:55 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping?[0;39m | Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2020-05-13 11:21:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter?[0;39m | Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@72a532a5: startup date [Wed May 13 11:21:47 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4e0e0cb6
2020-05-13 11:21:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-05-13 11:21:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-05-13 11:21:56 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.handler.SimpleUrlHandlerMapping?[0;39m | Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.ui.freemarker.SpringTemplateLoader?[0;39m | SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@72a532a5: startup date [Wed May 13 11:21:47 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4e0e0cb6] and template loader path [classpath:/templates/]
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer?[0;39m | ClassTemplateLoader for Spring macros added to FreeMarker configuration
2020-05-13 11:21:57 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration?[0;39m | Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-05-13 11:21:57 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.netflix.config.sources.URLConfigurationSource?[0;39m | No URLs will be polled as dynamic configuration sources.
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.netflix.config.sources.URLConfigurationSource?[0;39m | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-05-13 11:21:57 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.netflix.config.sources.URLConfigurationSource?[0;39m | No URLs will be polled as dynamic configuration sources.
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.netflix.config.sources.URLConfigurationSource?[0;39m | To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.DefaultLifecycleProcessor?[0;39m | Starting beans in phase 0
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.context.support.DefaultLifecycleProcessor?[0;39m | Starting beans in phase 2147483647
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper?[0;39m | Context refreshed
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper?[0;39m | Found 1 custom documentation plugin(s)
2020-05-13 11:21:57 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.scanners.ApiListingReferenceScanner?[0;39m | Scanning for api listing references
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator?[0;39m | Generating unique operation named: insertDictionaryTypeUsingPUT_1
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator?[0;39m | Generating unique operation named: updateDictionaryTypeUsingPUT_1
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[31mWARN ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mspringfox.documentation.swagger.readers.operation.OperationImplicitParameterReader?[0;39m | Coercing to be of type string. This may not even be a scalar type in actuality
2020-05-13 11:21:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pad.controller.UserControllerTest?[0;39m | Started UserControllerTest in 42.652 seconds (JVM running for 43.793)
2020-05-13 11:21:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.boot.test.mock.web.SpringBootMockServletContext?[0;39m | Initializing Spring FrameworkServlet ''
2020-05-13 11:21:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization started
2020-05-13 11:21:58 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32morg.springframework.test.web.servlet.TestDispatcherServlet?[0;39m | FrameworkServlet '': initialization completed in 17 ms
2020-05-13 11:21:59 | ?[34mINFO ?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.service.impl.UserServiceImpl?[0;39m | 从mysql中获得数据
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserMapper.findUserById?[0;39m | ==>  Preparing: SELECT tu.id, tu.user_id AS userId, tu.`password`, tu.reversion, tu.user_name AS userName, tu.delete_flag as deleteFlag, tu.created_by AS createdBy, tu.user_desc AS userDesc, tu.image_url AS imageUrl, tu.user_level AS userLevel, tu.created_time AS createdTime, tu.updated_by AS updatedBy, tu.updated_time AS updatedTime FROM tb_user tu WHERE tu.id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserMapper.findUserById?[0;39m | ==> Parameters: 25b957908a1d4612807e0a8f6f0e88e5(String)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserMapper.findUserById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserPrivilegeMapper.selectByUserId?[0;39m | ==>  Preparing: SELECT id, role_id AS roleId, user_id AS userId, created_by AS createdBy, created_time AS createdTime, updated_by AS updatedBy, updated_time AS updatedTime FROM tb_role_user WHERE user_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserPrivilegeMapper.selectByUserId?[0;39m | ==> Parameters: 3(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.UserPrivilegeMapper.selectByUserId?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.RolePrivilegeMapper.selectByRoleId?[0;39m | ==>  Preparing: SELECT id, role_id AS roleId, menu_id AS menuId, created_by AS createdBy, created_time AS createdTime, updated_by AS updatedBy, updated_time AS updatedTime FROM tb_menu_role WHERE role_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.RolePrivilegeMapper.selectByRoleId?[0;39m | ==> Parameters: 1(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.RolePrivilegeMapper.selectByRoleId?[0;39m | <==      Total: 7
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==> Parameters: 3(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==> Parameters: 2(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==> Parameters: 4(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==> Parameters: 5(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==> Parameters: 6(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==> Parameters: 7(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id = ? 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | ==> Parameters: 8(Integer)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.selectMenuById?[0;39m | <==      Total: 1
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByMenuIdList?[0;39m | ==>  Preparing: SELECT tm.id, tm.menu_id AS menuId, tm.menu_name AS menuName, tm.menu_path AS menuPath, tm.menu_no AS menuNo, tm.menu_image AS menuImage, tm.menu_type AS menuType, tm.parent_menu_id AS parentMenuId, tm.delete_flag AS deleteFlag, tm.reversion, tm.created_by AS createdBy, tm.created_time AS createdTime, tm.updated_by AS updatedBy, tm.updated_time AS updatedTime FROM tb_menu tm WHERE tm.delete_flag = 0 and tm.menu_id in ( ? , ? ) order by tm.menu_no asc 
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByMenuIdList?[0;39m | ==> Parameters: 3(String), 2(String)
2020-05-13 11:21:59 | ?[39mDEBUG?[0;39m | ?[1;33mTest worker?[0;39m | ?[1;32mcom.jiaxin.pda.mapper.MenuMapper.queryMenuListByMenuIdList?[0;39m | <==      Total: 2

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /user/queryUserPrivileges/0
       Parameters = {}
          Headers = {token=[eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODk5NDQzMzQ4NjMsInBheWxvYWQiOiJcIjI1Yjk1NzkwOGExZDQ2MTI4MDdlMGE4ZjZmMGU4OGU1XCIifQ.3la6WNRW9rQ7D0y-BI1hRS-AbrIzQsvxXEH9Nt0JqCk], Accept=[application/json], Content-Type=[application/json]}

Handler:
             Type = com.jiaxin.pda.controller.UserController
           Method = public com.jiaxin.pda.entity.vo.GeneralVo com.jiaxin.pda.controller.UserController.queryUserPrivileges(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"code":200,"msg":"操作成功","body":[{"createdTime":"2019-09-06 17:55:27","createdBy":-1,"updatedTime":"2019-09-06 17:55:27","updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"652109ac26aa46c78da0b0b505b5fd26","menuId":3,"menuName":"记账","parentMenuId":0,"menuImage":"http://www.zhixuanda.top/images/record.png","menuNo":1,"menuPath":"/record","menuType":2},{"createdTime":"2019-09-06 17:54:14","createdBy":-1,"updatedTime":"2019-09-06 17:54:14","updatedBy":-1,"reversion":1,"deleteFlag":false,"id":"72a53a3c66324d1ab83e2ea329e2a989","menuId":2,"menuName":"我的","parentMenuId":0,"menuImage":"http://www.zhixuanda.top/images/mine.png","menuNo":2,"menuPath":"/mine","menuType":2}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
